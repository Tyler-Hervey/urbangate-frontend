generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String?
  role      Role     @default(USER)
  loan      Lendor[]
}

model Loan {
  loan_id                     String   @id(map: "loan_pkey") @unique(map: "loan_loan_id_key") @default(uuid()) @db.Uuid
  created_at                  DateTime @default(now()) @db.Timestamptz(6)
  property_id                 String   @unique @db.Uuid
  property                    Property @relation(fields: [property_id], references: [property_id])
  loan_amount                 Float
  term_months                 Float
  start_date                  DateTime @db.Date
  maturity_date               DateTime @db.Date
  extendable                  Boolean? @default(true)
  number_of_extension_options Int?     @default(3)
  number_of_extensions_used   Int?     @default(0)
  loan_type                   String
  loan_to_arv                 Float
  loan_to_cost                Float
  loan_to_as_is_value         Float
  yield                       Float
  user                        Lendor[]
}

model Lendor {
  userId String @default(uuid())
  loanId String @default(uuid()) @db.Uuid
  loan   Loan   @relation(fields: [loanId], references: [loan_id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, loanId])
}

model Property {
  property_id   String   @id(map: "property_pkey") @unique(map: "property_property_id_key") @default(uuid()) @db.Uuid
  property_type String
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  images        String[]
  address       String
  slug          String   @unique
  description   String
  loans         Loan[]
}

enum Role {
  ADMIN
  USER
}
